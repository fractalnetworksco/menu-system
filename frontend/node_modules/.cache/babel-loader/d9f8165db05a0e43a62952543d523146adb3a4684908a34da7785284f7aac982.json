{"ast":null,"code":"var _jsxFileName = \"/app/src/Components/MenuSectionWithNote.js\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport MenuHeaderWithDescription from './MenuHeaderWithDescription';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuSectionWithNote = ({\n  data,\n  descriptions\n}) => {\n  // Find the description for the current section\n  // const sectionDescription = descriptions.find(section => section.section === data.title);\n\n  // Find the note for the current section\n  // const sectionNote = data.items.find(item => item.text); // Find the first item with a note\n\n  // Check if the items array is empty\n  if (data.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(MenuHeaderWithDescription, {\n        title: data.title,\n        description: descriptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No menu items available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 flex-col flex-grow flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(MenuHeaderWithDescription, {\n      title: data.title,\n      description: descriptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), data &&\n    /*#__PURE__*/\n    // Check if data exists\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(MenuItem, {\n          name: data.items[0].name,\n          description: data.items[0].description,\n          price: data.items[0].price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, \"first-item\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), data.note &&\n      /*#__PURE__*/\n      // Check if note exists\n      _jsxDEV(\"div\", {\n        className: \"note font-bold text-xl max-w-[26rem] mx-auto\",\n        children: data.note\n      }, \"note\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), data.items.slice(1).map((menuItem, index) =>\n      /*#__PURE__*/\n      // Loop through remaining items\n      _jsxDEV(\"div\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(MenuItem, {\n          name: menuItem.name,\n          description: menuItem.description,\n          price: menuItem.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, `item-${index + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MenuSectionWithNote;\nexport default MenuSectionWithNote;\nvar _c;\n$RefreshReg$(_c, \"MenuSectionWithNote\");","map":{"version":3,"names":["React","MenuItem","MenuHeaderWithDescription","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuSectionWithNote","data","descriptions","items","length","className","children","title","description","fileName","_jsxFileName","lineNumber","columnNumber","name","price","note","slice","map","menuItem","index","_c","$RefreshReg$"],"sources":["/app/src/Components/MenuSectionWithNote.js"],"sourcesContent":["import React from 'react';\nimport MenuItem from './MenuItem';\nimport MenuHeaderWithDescription from './MenuHeaderWithDescription';\n\nconst MenuSectionWithNote = ({ data, descriptions }) => {\n  // Find the description for the current section\n  // const sectionDescription = descriptions.find(section => section.section === data.title);\n\n  // Find the note for the current section\n  // const sectionNote = data.items.find(item => item.text); // Find the first item with a note\n\n  // Check if the items array is empty\n  if (data.items.length === 0) {\n    return (\n      <div className=\"mt-8\">\n        <MenuHeaderWithDescription title={data.title} description={descriptions} />\n        <div>No menu items available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 flex-col flex-grow flex justify-between\">\n      <MenuHeaderWithDescription title={data.title} description={descriptions} />\n      {data && (  // Check if data exists\n        <>\n          <div key=\"first-item\">  {/* Key for first item */}\n            <MenuItem\n              name={data.items[0].name}\n              description={data.items[0].description}\n              price={data.items[0].price}\n            />\n          </div>\n          {data.note && (  // Check if note exists\n            <div key=\"note\" className=\"note font-bold text-xl max-w-[26rem] mx-auto\">\n              {data.note}\n            </div>\n          )}\n          {data.items.slice(1).map((menuItem, index) => (  // Loop through remaining items\n            <div key={`item-${index + 1}`}>  {/* Key for remaining items */}\n              <MenuItem\n                name={menuItem.name}\n                description={menuItem.description}\n                price={menuItem.price}\n              />\n            </div>\n          ))}\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default MenuSectionWithNote;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}