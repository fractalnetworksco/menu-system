{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/fractalNetworks/theLittleDooey/the-little-dooey/src/Components/MenuSectionWithNote.js\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuSectionWithNote = ({\n  data,\n  descriptions\n}) => {\n  // Find the description for the current section\n  const sectionDescription = descriptions.find(section => section.section === data.title);\n\n  // Check if the items array is empty\n  if (!data.items || data.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No menu items available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), data.items.map((menuItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: menuItem.note ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-black mt-2\",\n        children: menuItem.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n        name: menuItem.name,\n        description: menuItem.description,\n        price: menuItem.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = MenuSectionWithNote;\nexport default MenuSectionWithNote;\nvar _c;\n$RefreshReg$(_c, \"MenuSectionWithNote\");","map":{"version":3,"names":["React","MenuItem","jsxDEV","_jsxDEV","MenuSectionWithNote","data","descriptions","sectionDescription","find","section","title","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","menuItem","index","note","name","description","price","_c","$RefreshReg$"],"sources":["/home/jonathan/fractalNetworks/theLittleDooey/the-little-dooey/src/Components/MenuSectionWithNote.js"],"sourcesContent":["import React from 'react';\nimport MenuItem from './MenuItem';\n\nconst MenuSectionWithNote = ({ data, descriptions }) => {\n  // Find the description for the current section\n  const sectionDescription = descriptions.find(section => section.section === data.title);\n\n  // Check if the items array is empty\n  if (!data.items || data.items.length === 0) {\n    return (\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">{data.title}</h2>\n        <div>No menu items available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8\">\n      <h2 className=\"text-2xl font-semibold mb-4\">{data.title}</h2>\n      {data.items.map((menuItem, index) => (\n        <div key={index}>\n          {menuItem.note ? (\n            <div className=\"text-center text-black mt-2\">{menuItem.note}</div>\n          ) : (\n            <MenuItem\n              name={menuItem.name}\n              description={menuItem.description}\n              price={menuItem.price}\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MenuSectionWithNote;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EACtD;EACA,MAAMC,kBAAkB,GAAGD,YAAY,CAACE,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACA,OAAO,KAAKJ,IAAI,CAACK,KAAK,CAAC;;EAEvF;EACA,IAAI,CAACL,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1C,oBACET,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBX,OAAA;QAAIU,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAET,IAAI,CAACK;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7Df,OAAA;QAAAW,QAAA,EAAK;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;EAEA,oBACEf,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBX,OAAA;MAAIU,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAET,IAAI,CAACK;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5Db,IAAI,CAACM,KAAK,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9BlB,OAAA;MAAAW,QAAA,EACGM,QAAQ,CAACE,IAAI,gBACZnB,OAAA;QAAKU,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAEM,QAAQ,CAACE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAElEf,OAAA,CAACF,QAAQ;QACPsB,IAAI,EAAEH,QAAQ,CAACG,IAAK;QACpBC,WAAW,EAAEJ,QAAQ,CAACI,WAAY;QAClCC,KAAK,EAAEL,QAAQ,CAACK;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IACF,GATOG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GAhCItB,mBAAmB;AAkCzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}