{"ast":null,"code":"var _jsxFileName = \"/app/src/Components/MenuSection.js\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport MenuHeaderWithDescription from './MenuHeaderWithDescription';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuSection = ({\n  data,\n  descriptions\n}) => {\n  // Check if descriptions is undefined or empty\n\n  // if (!descriptions || descriptions.length === 0) {\n  //   // Return loading or default content if descriptions is not available\n  //   return (\n  //     <div className=\"mt-8\">\n  //       <MenuHeaderWithDescription title={data.title} description=\"\" />\n  //       <div>No menu items available</div>\n  //     </div>\n  //   );\n  // }\n\n  // Assuming the first element in data contains descriptions\n  const sectionDescriptions = (descriptions === null || descriptions === void 0 ? void 0 : descriptions.note) || {};\n\n  // Check if the items array is empty\n  if (data.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(MenuHeaderWithDescription, {\n        title: data.title,\n        description: sectionDescriptions.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No menu items available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 flex-col flex-grow flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(MenuHeaderWithDescription, {\n      title: data.title,\n      description: sectionDescriptions.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), data.items.map((menuItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        name: menuItem.name,\n        description: menuItem.description,\n        price: menuItem.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = MenuSection;\nexport default MenuSection;\nvar _c;\n$RefreshReg$(_c, \"MenuSection\");","map":{"version":3,"names":["React","MenuItem","MenuHeaderWithDescription","jsxDEV","_jsxDEV","MenuSection","data","descriptions","sectionDescriptions","note","items","length","className","children","title","description","fileName","_jsxFileName","lineNumber","columnNumber","map","menuItem","index","name","price","_c","$RefreshReg$"],"sources":["/app/src/Components/MenuSection.js"],"sourcesContent":["import React from 'react';\nimport MenuItem from './MenuItem';\nimport MenuHeaderWithDescription from './MenuHeaderWithDescription';\n\nconst MenuSection = ({ data, descriptions }) => {\n  // Check if descriptions is undefined or empty\n\n  // if (!descriptions || descriptions.length === 0) {\n  //   // Return loading or default content if descriptions is not available\n  //   return (\n  //     <div className=\"mt-8\">\n  //       <MenuHeaderWithDescription title={data.title} description=\"\" />\n  //       <div>No menu items available</div>\n  //     </div>\n  //   );\n  // }\n\n  // Assuming the first element in data contains descriptions\n  const sectionDescriptions = descriptions?.note || {};\n\n  // Check if the items array is empty\n  if (data.items.length === 0) {\n    return (\n      <div className=\"mt-8\">\n        <MenuHeaderWithDescription title={data.title} description={sectionDescriptions.description} />\n        <div>No menu items available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 flex-col flex-grow flex justify-between\">\n      <MenuHeaderWithDescription title={data.title} description={sectionDescriptions.description} />\n      {data.items.map((menuItem, index) => (\n        <div key={index}>\n          <MenuItem\n            name={menuItem.name}\n            description={menuItem.description}\n            price={menuItem.price}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MenuSection;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,yBAAyB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAC9C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMC,mBAAmB,GAAG,CAAAD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,IAAI,KAAI,CAAC,CAAC;;EAEpD;EACA,IAAIH,IAAI,CAACI,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC3B,oBACEP,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBT,OAAA,CAACF,yBAAyB;QAACY,KAAK,EAAER,IAAI,CAACQ,KAAM;QAACC,WAAW,EAAEP,mBAAmB,CAACO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9Ff,OAAA;QAAAS,QAAA,EAAK;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;EAEA,oBACEf,OAAA;IAAKQ,SAAS,EAAC,8CAA8C;IAAAC,QAAA,gBAC3DT,OAAA,CAACF,yBAAyB;MAACY,KAAK,EAAER,IAAI,CAACQ,KAAM;MAACC,WAAW,EAAEP,mBAAmB,CAACO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7Fb,IAAI,CAACI,KAAK,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9BlB,OAAA;MAAAS,QAAA,eACET,OAAA,CAACH,QAAQ;QACPsB,IAAI,EAAEF,QAAQ,CAACE,IAAK;QACpBR,WAAW,EAAEM,QAAQ,CAACN,WAAY;QAClCS,KAAK,EAAEH,QAAQ,CAACG;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC,GALMG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAxCIpB,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}