{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\";\nimport React from 'react';\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Page3 from './Page3';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nfunction App() {\n  // const { isLoading, error, data, isFetching } = useQuery({\n  //   queryKey: ['menuData'],\n  //   queryFn: () =>\n  //     fetch('https://demo.test.starkville.net/menu').then((res) =>\n  //       res.json(),\n  //     ),\n  // })\n\n  // if (isLoading) return <div>Loading...</div>;\n  // if (error) return <div>Error fetching data.</div>;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/2\",\n          element: /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/3\",\n          element: /*#__PURE__*/_jsxDEV(Page3, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default QueryClientProvider({\n  client: queryClient\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Page1","Page2","Page3","BrowserRouter","Route","Routes","useQuery","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","queryClient","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","client","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React from 'react';\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Page3 from './Page3';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n\n  // const { isLoading, error, data, isFetching } = useQuery({\n  //   queryKey: ['menuData'],\n  //   queryFn: () =>\n  //     fetch('https://demo.test.starkville.net/menu').then((res) =>\n  //       res.json(),\n  //     ),\n  // })\n\n\n  // if (isLoading) return <div>Loading...</div>;\n  // if (error) return <div>Error fetching data.</div>;\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Page1 />} />\n          <Route path=\"/2\" element={<Page2 />} />\n          <Route path=\"/3\" element={<Page3 />} />\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default QueryClientProvider({ client: queryClient })(App);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,SAASC,QAAQ,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzE,MAAMC,WAAW,GAAG,IAAIN,WAAW,CAAC,CAAC;AAErC,SAASO,GAAGA,CAAA,EAAG;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA,CAACP,aAAa;MAAAY,QAAA,eACZL,OAAA,CAACL,MAAM;QAAAU,QAAA,gBACLL,OAAA,CAACN,KAAK;UAACY,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEP,OAAA,CAACV,KAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCX,OAAA,CAACN,KAAK;UAACY,IAAI,EAAC,IAAI;UAACC,OAAO,eAAEP,OAAA,CAACT,KAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCX,OAAA,CAACN,KAAK;UAACY,IAAI,EAAC,IAAI;UAACC,OAAO,eAAEP,OAAA,CAACR,KAAK;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBAChB,CAAC;AAEP;AAACC,EAAA,GAxBQR,GAAG;AA0BZ,eAAeN,mBAAmB,CAAC;EAAEe,MAAM,EAAEV;AAAY,CAAC,CAAC,CAACC,GAAG,CAAC;AAAC,IAAAQ,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}