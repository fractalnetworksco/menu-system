{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/fractalNetworks/theLittleDooey/the-little-dooey/src/Page3.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const leftColumnRef = useRef(null);\n  const rightColumnRef = useRef(null);\n\n  // Fetch the section headers data\n  const {\n    data: sectionHeaders,\n    isLoading: sectionHeadersLoading,\n    isError: sectionHeadersError\n  } = useQuery('sectionHeaders', () => fetchData('/data/section_headers.json'));\n\n  // Fetch the data for the left column\n  const {\n    data: fromTheGulfAndPondData,\n    isLoading: fromTheGulfAndPondLoading,\n    isError: fromTheGulfAndPondError\n  } = useQuery('fromTheGulfAndPond', () => fetchData('/data/from_the_gulf_and_pond.json')); // Fetch the new data\n\n  useEffect(() => {\n    const fetchDataPeriodically = () => {\n      fetchData('/data/from_the_gulf_and_pond.json'); // Fetch the new data periodically\n    };\n    const intervalId = setInterval(fetchDataPeriodically, REFRESH_INTERVAL);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    function setEqualHeight() {\n      if (leftColumnRef.current && rightColumnRef.current) {\n        const leftHeight = leftColumnRef.current.offsetHeight;\n        const rightHeight = rightColumnRef.current.offsetHeight;\n        const maxHeight = Math.max(leftHeight, rightHeight);\n        leftColumnRef.current.style.height = `${maxHeight}px`;\n        rightColumnRef.current.style.height = `${maxHeight}px`;\n      }\n    }\n\n    // Call setEqualHeight when the window is resized\n    window.addEventListener('resize', setEqualHeight);\n\n    // Call setEqualHeight once initially\n    setEqualHeight();\n\n    // Cleanup event listener\n    return () => window.removeEventListener('resize', setEqualHeight);\n  }, []);\n\n  // Handle loading and error states\n  if (sectionHeadersLoading || fromTheGulfAndPondLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 66\n  }, this);\n  if (sectionHeadersError || fromTheGulfAndPondError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 62\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-5/6 mx-auto flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        width: \"w-full md:w-1/2\",\n        ref: leftColumnRef,\n        children: [/*#__PURE__*/_jsxDEV(MenuSectionWithNote, {\n          data: {\n            title: \"From the Gulf and Pond\",\n            items: fromTheGulfAndPondData\n          },\n          descriptions: sectionHeaders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        width: \"w-full md:w-1/2\",\n        ref: rightColumnRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"du6Mj5SfFK6iiNGGIosf3GSDqzI=\", true);\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","leftColumnRef","useRef","rightColumnRef","data","sectionHeaders","isLoading","sectionHeadersLoading","isError","sectionHeadersError","useQuery","fetchData","fromTheGulfAndPondData","fromTheGulfAndPondLoading","fromTheGulfAndPondError","useEffect","fetchDataPeriodically","intervalId","setInterval","REFRESH_INTERVAL","clearInterval","setEqualHeight","current","leftHeight","offsetHeight","rightHeight","maxHeight","Math","max","style","height","window","addEventListener","removeEventListener","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Column","width","ref","MenuSectionWithNote","title","items","descriptions","_c","$RefreshReg$"],"sources":["/home/jonathan/fractalNetworks/theLittleDooey/the-little-dooey/src/Page3.js"],"sourcesContent":["function App() {\n  const leftColumnRef = useRef(null);\n  const rightColumnRef = useRef(null);\n\n  // Fetch the section headers data\n  const { data: sectionHeaders, isLoading: sectionHeadersLoading, isError: sectionHeadersError } = useQuery('sectionHeaders', () => fetchData('/data/section_headers.json'));\n\n  // Fetch the data for the left column\n  const { data: fromTheGulfAndPondData, isLoading: fromTheGulfAndPondLoading, isError: fromTheGulfAndPondError } = useQuery('fromTheGulfAndPond', () => fetchData('/data/from_the_gulf_and_pond.json')); // Fetch the new data\n\n  useEffect(() => {\n    const fetchDataPeriodically = () => {\n      fetchData('/data/from_the_gulf_and_pond.json'); // Fetch the new data periodically\n    };\n\n    const intervalId = setInterval(fetchDataPeriodically, REFRESH_INTERVAL);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    function setEqualHeight() {\n      if (leftColumnRef.current && rightColumnRef.current) {\n        const leftHeight = leftColumnRef.current.offsetHeight;\n        const rightHeight = rightColumnRef.current.offsetHeight;\n        const maxHeight = Math.max(leftHeight, rightHeight);\n        leftColumnRef.current.style.height = `${maxHeight}px`;\n        rightColumnRef.current.style.height = `${maxHeight}px`;\n      }\n    }\n\n    // Call setEqualHeight when the window is resized\n    window.addEventListener('resize', setEqualHeight);\n\n    // Call setEqualHeight once initially\n    setEqualHeight();\n\n    // Cleanup event listener\n    return () => window.removeEventListener('resize', setEqualHeight);\n  }, []);\n\n  // Handle loading and error states\n  if (sectionHeadersLoading || fromTheGulfAndPondLoading) return <div>Loading...</div>;\n  if (sectionHeadersError || fromTheGulfAndPondError) return <div>Error fetching data.</div>;\n\n  return (\n    <div className=\"w-5/6 mx-auto flex flex-col\">\n      <div className=\"flex flex-col md:flex-row\">\n        <Column width=\"w-full md:w-1/2\" ref={leftColumnRef}>\n          <MenuSectionWithNote data={{ title: \"From the Gulf and Pond\", items: fromTheGulfAndPondData }} descriptions={sectionHeaders} /> {/* Render the new component with the fetched data */}\n        </Column>\n        <Column width=\"w-full md:w-1/2\" ref={rightColumnRef}>\n          {/* Render other components as needed */}\n        </Column>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}